openapi: 3.0.3
info:
  title: TurbineOps Lite REST API
  version: 0.1.0
servers:
  - url: http://localhost:4000/api
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Turbine:
      type: object
      properties:
        id:
          type: string
          example: "cmh6afk6e0000z03bn6iyftqx"
        name:
          type: string
          example: "T-1000"
        manufacturer:
          type: string
          nullable: true
          example: "SkyGen"
        mwRating:
          type: number
          nullable: true
          example: 2.5
        lat:
          type: number
          nullable: true
          example: 12.98
        lng:
          type: number
          nullable: true
          example: 77.59
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: Error message
paths:
  /healthz:
    get:
      summary: Health check
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      summary: User login
      description: Authenticate user with email and password, receive JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: admin@example.com
                password:
                  type: string
                  format: password
                  example: admin123
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT bearer token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                        example: admin@example.com
                      name:
                        type: string
                        example: Admin
                      role:
                        type: string
                        enum: [ADMIN, ENGINEER, VIEWER]
                        example: ADMIN
        "400":
          description: Bad request - missing email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: Email and password are required
        "401":
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
                  message:
                    type: string
                    example: Invalid email or password
  /turbines:
    get:
      summary: List all turbines
      description: Get all turbines. Requires authentication (ADMIN/ENGINEER/VIEWER)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Turbine"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new turbine
      description: Create a new turbine. Requires ADMIN or ENGINEER role
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "T-2000"
                manufacturer:
                  type: string
                  example: "WindTech"
                mwRating:
                  type: number
                  minimum: 0
                  maximum: 100
                  example: 3.5
                lat:
                  type: number
                  minimum: -90
                  maximum: 90
                  example: 12.98
                lng:
                  type: number
                  minimum: -180
                  maximum: 180
                  example: 77.59
      responses:
        "201":
          description: Turbine created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Turbine"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /turbines/{id}:
    put:
      summary: Update a turbine
      description: Update an existing turbine. Requires ADMIN or ENGINEER role
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "cmh6afk6e0000z03bn6iyftqx"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "T-2000"
                manufacturer:
                  type: string
                  example: "WindTech"
                mwRating:
                  type: number
                  minimum: 0
                  maximum: 100
                  example: 3.5
                lat:
                  type: number
                  minimum: -90
                  maximum: 90
                  example: 12.98
                lng:
                  type: number
                  minimum: -180
                  maximum: 180
                  example: 77.59
      responses:
        "200":
          description: Turbine updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Turbine"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Turbine not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a turbine
      description: Delete a turbine. Requires ADMIN role only. Cannot delete turbines with inspections.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "cmh6afk6e0000z03bn6iyftqx"
      responses:
        "204":
          description: Turbine deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Turbine not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict - turbine has inspections
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
